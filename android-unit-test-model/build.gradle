apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'me.tatarka.androidunittest'
version = '1.0'

sourceCompatibility = 1.6

dependencies {
  compile gradleApi()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
  archives jar
    archives javadocJar
    archives sourcesJar
}

if (project.hasProperty('sonatype.username') &&
    project.hasProperty('sonatype.password')) {

  signing {
    sign configurations.archives
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { deployment -> signing.signPom(deployment) }

        def repoUrl
          if (project.version.endsWith("SNAPSHOT")) {
            repoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
          } else {
            repoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
          }

        repository(url: repoUrl) {
          authentication(
              userName: project.getProperty('sonatype.username'),
              password: project.getProperty('sonatype.password'))
        }

        pom.project {
          name 'Android Studio Unit Test Plugin (model)'
            packaging 'jar'
            description 'A collection of interfaces to allow a gradle android unit test plugin to communicate with an intellij plugin.'
            url 'https://github.com/evant/android-studio-unit-test-plugin'

            scm {
              url 'git@github.com:evant/android-studio-unit-test-plugin.git'
                connection 'scm:git:git@github.com:evant/android-studio-unit-test-plugin.git'
                developerConnection 'scm:git:git@github.com:evant/android-studio-unit-test-plugin.git'
            }

          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
          }

          developers {
            developer {
              id 'evant'
                name 'Evan Tatarka'
            }
          }
        }
      }
    }
  }
}
